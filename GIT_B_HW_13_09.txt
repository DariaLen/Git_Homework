1.Как отказаться от изменений в файле (файлах) находящийся в рабочем каталоге (work directory)?

	-->git checkout -- file1.txt  ( Отмена изменений в одном файле)
	-->git checkout -- file1.txt file2.txt  (Отмена изменений в нескольких файлах)
	-->git checkout -- .  (Отмена изменений во всех файлах)
2.Как вернуть файл из индекса в рабочий каталог?
	-->git restore --staged file1.txt
3.Как отменить ошибочный commit ?
	   git reset  HEAD~2

4.Как исправить коммит отправленный на сервер GitHub?
	-->git revert HEAD
	-->git commit -a -m "OK commit"
	-->git push
	(in the history: Revert "Bed commit")
5.Как создать новую ветку и переключится в нее?
	-->git branch branch_name	      (creates a branch)
	-->git checkout branch_name      (switch to it)
		or
	-->git checkout -b branch_name  (creates a branch and switches to it)
	
5.В чем отличение между fast-forward merge  and non fast-forfard merge?

	Основной результат non fast-forward merge - это сохранение всех изменений веток, даже если они отличаются.
	Это может быть полезно, если Нужно иметь полную историю изменений по каждой ветке. Fast-forward merge, с другой стороны, менее сложен и обычно используется, 
	когда ветки соответствуют друг другу без каких-либо дополнительных изменений.

6.Когда может возникнуть конфликт слияния веток, как  его разрешить?

	Решение конфликта : нужно открыть сам файл который конфликтует , 
	выбрать самому что оставить а что изменить , удалить маркеры и оставить в файле только то , что нужно .Сохранить файл.
	Фиксируем изменения ( git commit -a “merge commit”).Конфликт решен.

7.Можно ли удалить ветку? Как? 
	-->git branch -d branch_name
	Если есть какие то изменения то можно удалить принудительно ключом -D --> git branch -D branch_name

